services:
  app:
    build:
      context: .
    container_name: aibolit
    restart: unless-stopped
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      LOG_FILE: /app/logs/app.log
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "${GRPC_PORT}:${GRPC_PORT}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - type: bind
        source: .
        target: /app
        read_only: true
      - type: bind
        source: ./logs
        target: /app/logs
    networks:
      - backend

  db:
    image: postgres:16rc1-alpine3.18
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_MULTIPLE_DATABASES: aibolit_db,test_aibolit_db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6543:5432"
    volumes:
      - ./docker/init:/docker-entrypoint-initdb.d
    networks:
      - backend

volumes:
  postgres_data:
  app_logs:

networks:
  backend:
    driver: bridge
